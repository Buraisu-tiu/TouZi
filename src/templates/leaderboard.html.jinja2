{% extends "base.html.jinja2" %}
{% block content %}

<style>
    .leaderboard-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 2rem;
    }

    .leaderboard-header {
        text-align: center;
        margin-bottom: 3rem;
    }

    .leaderboard-title {
        font-size: 2.5rem;
        font-weight: 800;
        background: linear-gradient(to right, #fff, rgba(255,255,255,0.7));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 1rem;
    }

    .leaderboard-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
        margin-top: 2rem;
    }

    .leader-card {
        background: rgba(0, 0, 0, 0.4);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 24px;
        padding: 1.5rem;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .leader-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg,
            transparent,
            {{ user.accent_color if user and user.accent_color else '#64ffda' }}08);
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .leader-card:hover::before {
        opacity: 1;
    }

    .leader-rank {
        position: absolute;
        top: 1rem;
        right: 1rem;
        font-size: 3rem;
        font-weight: 800;
        opacity: 0.2;
    }

    .leader-info {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .leader-avatar {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: var(--accent-color);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        font-weight: 600;
    }

    .leader-details {
        flex: 1;
    }

    .leader-name {
        font-size: 1.2rem;
        font-weight: 600;
        margin-bottom: 0.25rem;
    }

    .leader-stats {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;
        margin-top: 1rem;
    }

    .stat-item {
        background: rgba(0, 0, 0, 0.3);
        padding: 1rem;
        border-radius: 12px;
        text-align: center;
    }

    .stat-value {
        font-size: 1.2rem;
        font-weight: 700;
        font-family: 'SF Mono', 'Monaco', 'Inconsolata', monospace;
        margin-bottom: 0.25rem;
    }

    .stat-label {
        font-size: 0.8rem;
        opacity: 0.7;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .top-3 {
        display: flex;
        justify-content: center;
        gap: 2rem;
        margin-bottom: 3rem;
    }

    .top-3 .leader-card {
        width: 300px;
        transform-origin: center bottom;
    }

    .first-place {
        transform: scale(1.1);
        background: linear-gradient(135deg,
            rgba(255, 215, 0, 0.2),
            rgba(255, 215, 0, 0.1));
    }

    .second-place {
        transform: scale(1.05);
        background: linear-gradient(135deg,
            rgba(192, 192, 192, 0.2),
            rgba(192, 192, 192, 0.1));
    }

    .third-place {
        transform: scale(1);
        background: linear-gradient(135deg,
            rgba(205, 127, 50, 0.2),
            rgba(205, 127, 50, 0.1));
    }

    @media (max-width: 768px) {
        .top-3 {
            flex-direction: column;
            align-items: center;
            gap: 1rem;
        }

        .top-3 .leader-card {
            width: 100%;
            max-width: 300px;
        }
    }

    .loading-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 400px;
        width: 100%;
    }

    .loading-spinner {
        width: 50px;
        height: 50px;
        border: 3px solid rgba({{ user.accent_color if user and user.accent_color else '#64ffda' | hex_to_rgb }}, 0.1);
        border-radius: 50%;
        border-top-color: var(--accent-color);
        animation: spin 1s ease-in-out infinite;
    }

    .error-message {
        text-align: center;
        padding: 2rem;
        color: #ff4466;
        background: rgba(255, 68, 102, 0.1);
        border-radius: 12px;
        margin: 2rem 0;
    }

    @keyframes spin {
        to { transform: rotate(360deg); }
    }
</style>

<div class="leaderboard-container">
    <div class="leaderboard-header">
        <h1 class="leaderboard-title">Global Leaderboard</h1>
    </div>

    {% if error %}
        <div class="error-message">
            {{ error }}
        </div>
    {% endif %}

    <div id="leaderboardContent" style="display: none;">
        <div class="top-3">
            {% for user in leaderboard[:3] %}
                <div class="leader-card {% if loop.index == 1 %}first-place{% elif loop.index == 2 %}second-place{% else %}third-place{% endif %}">
                    <div class="leader-rank">#{{ loop.index }}</div>
                    <div class="leader-info">
                        <div class="leader-avatar">{{ user.username[0] }}</div>
                        <div class="leader-details">
                            <div class="leader-name">{{ user.username }}</div>
                            <div class="leader-position">Top {{ loop.index }}</div>
                        </div>
                    </div>
                    <div class="leader-stats">
                        <div class="stat-item">
                            <div class="stat-value">${{ "%.2f"|format(user.total_value) }}</div>
                            <div class="stat-label">Portfolio Value</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value">{{ user.win_rate }}%</div>
                            <div class="stat-label">Win Rate</div>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>

        <div class="leaderboard-grid">
            {% for user in leaderboard[3:] %}
                <div class="leader-card">
                    <div class="leader-rank">#{{ loop.index + 3 }}</div>
                    <div class="leader-info">
                        <div class="leader-avatar">{{ user.username[0] }}</div>
                        <div class="leader-details">
                            <div class="leader-name">{{ user.username }}</div>
                        </div>
                    </div>
                    <div class="leader-stats">
                        <div class="stat-item">
                            <div class="stat-value">${{ "%.2f"|format(user.total_value) }}</div>
                            <div class="stat-label">Portfolio Value</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value">{{ user.win_rate }}%</div>
                            <div class="stat-label">Win Rate</div>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
    </div>

    <div id="loadingIndicator" class="loading-container">
        <div class="loading-spinner"></div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const content = document.getElementById('leaderboardContent');
    const loading = document.getElementById('loadingIndicator');

    // Show content and hide loading after a small delay
    setTimeout(() => {
        loading.style.display = 'none';
        content.style.display = 'block';
    }, 500);
});
</script>
{% endblock %}