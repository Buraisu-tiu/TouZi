{% extends "base.html.jinja2" %}

{% block content %}
<style>
    :root {
        --accent-color: {{ user.accent_color if user and user.accent_color else '#64ffda' }};
        --background-color: {{ user.background_color if user and user.background_color else '#0a0a0a' }};
        --text-color: {{ user.text_color if user and user.text_color else '#ffffff' }};
    }

    .dev-tools-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 2rem;
        min-height: 100vh;
        background: radial-gradient(circle at top right, 
            {{ user.accent_color if user and user.accent_color else '#64ffda' }}15 0%, 
            transparent 60%);
    }

    .dev-tools-header {
        margin-bottom: 2rem;
    }

    .dev-tools-title {
        font-size: 2.5rem;
        font-weight: 800;
        background: linear-gradient(to right, var(--text-color), rgba(255,255,255,0.7));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 0.5rem;
    }

    .dev-tools-subtitle {
        color: rgba(255, 255, 255, 0.6);
        font-size: 1.1rem;
    }

    .dev-tools-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        gap: 2rem;
    }

    .tool-card {
        background: rgba(0, 0, 0, 0.4);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 24px;
        padding: 2rem;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .tool-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
        border-color: rgba({{ user.accent_color | hex_to_rgb }}, 0.3);
    }

    .tool-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--accent-color);
        margin-bottom: 1.5rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        color: rgba(255, 255, 255, 0.7);
    }

    select, input {
        width: 100%;
        padding: 1rem;
        background: rgba(0, 0, 0, 0.3);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        color: var(--text-color);
        font-size: 1rem;
        transition: all 0.3s ease;
    }

    select {
        appearance: none;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='white' viewBox='0 0 16 16'%3E%3Cpath d='M8 11L3 6h10z'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 1rem center;
        background-size: 12px;
    }

    select:focus, input:focus {
        outline: none;
        border-color: var(--accent-color);
        box-shadow: 0 0 0 3px rgba({{ user.accent_color | hex_to_rgb }}, 0.2);
    }

    .submit-button {
        width: 100%;
        padding: 1rem;
        background: linear-gradient(135deg, 
            {{ user.accent_color if user and user.accent_color else '#64ffda' }}90,
            {{ user.accent_color if user and user.accent_color else '#64ffda' }});
        color: var(--background-color);
        border: none;
        border-radius: 12px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .submit-button:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 16px rgba({{ user.accent_color | hex_to_rgb }}, 0.4);
    }
</style>

<div class="dev-tools-container">
    <div class="dev-tools-header">
        <h1 class="dev-tools-title">Developer Tools</h1>
        <p class="dev-tools-subtitle">Advanced management tools for administrators</p>
    </div>

    <div class="dev-tools-grid">
        <div class="tool-card">
            <h2 class="tool-title">Add Asset</h2>
            <form method="POST">
                <input type="hidden" name="action" value="add_stock_or_crypto">
                
                <div class="form-group">
                    <label class="form-label">Target User:</label>
                    <select name="target_user_id" required>
                        <option value="">Select a user...</option>
                        {% for user_item in all_users %}
                            <option value="{{ user_item.id }}">{{ user_item.username }}</option>
                        {% endfor %}
                    </select>
                </div>

                <div class="form-group">
                    <label class="form-label" for="symbol">Symbol:</label>
                    <select id="symbol" name="symbol" required>
                        <option value="">Select a symbol...</option>
                        <optgroup label="Popular Stocks">
                            <option value="AAPL">AAPL - Apple Inc.</option>
                            <option value="MSFT">MSFT - Microsoft</option>
                            <option value="GOOGL">GOOGL - Alphabet</option>
                            <option value="AMZN">AMZN - Amazon</option>
                            <option value="META">META - Meta Platforms</option>
                            <option value="TSLA">TSLA - Tesla</option>
                            <option value="NVDA">NVDA - NVIDIA</option>
                        </optgroup>
                        <optgroup label="Popular Crypto">
                            <option value="BTC">BTC - Bitcoin</option>
                            <option value="ETH">ETH - Ethereum</option>
                            <option value="DOGE">DOGE - Dogecoin</option>
                            <option value="ADA">ADA - Cardano</option>
                            <option value="SOL">SOL - Solana</option>
                        </optgroup>
                    </select>
                </div>

                <div class="form-group">
                    <label class="form-label" for="shares">Shares:</label>
                    <select id="shares" name="shares" required>
                        <option value="">Select amount...</option>
                        <option value="0.01">0.01</option>
                        <option value="0.1">0.1</option>
                        <option value="1">1</option>
                        <option value="10">10</option>
                        <option value="100">100</option>
                        <option value="1000">1000</option>
                    </select>
                </div>

                <div class="form-group">
                    <label class="form-label" for="asset_type">Asset Type:</label>
                    <select id="asset_type" name="asset_type" required>
                        <option value="">Select type...</option>
                        <option value="stock">Stock</option>
                        <option value="crypto">Cryptocurrency</option>
                    </select>
                </div>

                <button type="submit" class="submit-button">Add Asset</button>
            </form>
        </div>

        <div class="tool-card">
            <h2 class="tool-title">Award Badge</h2>
            <form method="POST">
                <input type="hidden" name="action" value="add_badge">
                
                <div class="form-group">
                    <label class="form-label">Target User:</label>
                    <select name="target_user_id" required>
                        <option value="">Select a user...</option>
                        {% for user_item in all_users %}
                            <option value="{{ user_item.id }}">{{ user_item.username }}</option>
                        {% endfor %}
                    </select>
                </div>
                
                <div class="form-group">
                    <label class="form-label" for="badge_id">Select Badge:</label>
                    <select id="badge_id" name="badge_id" required>
                        <option value="">Select a badge...</option>
                        
                        {% if available_badges %}
                            <!-- Easy Badges -->
                            <optgroup label="Easy Badges">
                                {% for badge_id, badge_info in available_badges.items() %}
                                    {% if badge_info.difficulty == 'easy' %}
                                        <option value="{{ badge_id }}">{{ badge_info.name }} - {{ badge_info.description }}</option>
                                    {% endif %}
                                {% endfor %}
                            </optgroup>
                            
                            <!-- Medium Badges -->
                            <optgroup label="Medium Badges">
                                {% for badge_id, badge_info in available_badges.items() %}
                                    {% if badge_info.difficulty == 'medium' %}
                                        <option value="{{ badge_id }}">{{ badge_info.name }} - {{ badge_info.description }}</option>
                                    {% endif %}
                                {% endfor %}
                            </optgroup>
                            
                            <!-- Hard Badges -->
                            <optgroup label="Hard Badges">
                                {% for badge_id, badge_info in available_badges.items() %}
                                    {% if badge_info.difficulty == 'hard' %}
                                        <option value="{{ badge_id }}">{{ badge_info.name }} - {{ badge_info.description }}</option>
                                    {% endif %}
                                {% endfor %}
                            </optgroup>
                            
                            <!-- Very Hard Badges -->
                            <optgroup label="Very Hard Badges">
                                {% for badge_id, badge_info in available_badges.items() %}
                                    {% if badge_info.difficulty == 'very hard' %}
                                        <option value="{{ badge_id }}">{{ badge_info.name }} - {{ badge_info.description }}</option>
                                    {% endif %}
                                {% endfor %}
                            </optgroup>
                        {% else %}
                            <!-- Fallback if badges aren't available -->
                            <option value="first_trade">First Steps - First trade</option>
                            <option value="big_spender">Big Spender - $10,000 in single trade</option>
                        {% endif %}
                    </select>
                </div>

                <button type="submit" class="submit-button">Award Badge</button>
            </form>
        </div>

        <div class="tool-card">
            <h2 class="tool-title">Modify Balance</h2>
            <form method="POST">
                <input type="hidden" name="action" value="add_money">
                
                <div class="form-group">
                    <label class="form-label">Target User:</label>
                    <select name="target_user_id" required>
                        <option value="">Select a user...</option>
                        {% for user_item in all_users %}
                            <option value="{{ user_item.id }}">{{ user_item.username }}</option>
                        {% endfor %}
                    </select>
                </div>

                <div class="form-group">
                    <label class="form-label">Amount:</label>
                    <input type="number" name="amount" step="0.01" required>
                </div>

                <button type="submit" class="submit-button">Add Money</button>
            </form>
        </div>

        <div class="tool-card">
            <h2 class="tool-title">Modify Account Property</h2>
            <form method="POST">
                <input type="hidden" name="action" value="modify_property">
                
                <div class="form-group">
                    <label class="form-label">Target User:</label>
                    <select name="target_user_id" required>
                        <option value="">Select a user...</option>
                        {% for user_item in all_users %}
                            <option value="{{ user_item.id }}">{{ user_item.username }}</option>
                        {% endfor %}
                    </select>
                </div>

                <div class="form-group">
                    <label class="form-label">Property:</label>
                    <select name="property_name" required>
                        <option value="">Select property...</option>
                        <option value="accent_color">Accent Color</option>
                        <option value="background_color">Background Color</option>
                        <option value="text_color">Text Color</option>
                        <option value="theme">Theme</option>
                    </select>
                </div>

                <div class="form-group">
                    <label class="form-label">Value:</label>
                    <select name="property_value" required>
                        <option value="">Select value...</option>
                        <optgroup label="Theme Values">
                            <option value="dark">Dark Theme</option>
                            <option value="light">Light Theme</option>
                        </optgroup>
                        <optgroup label="Colors">
                            <option value="#64ffda">Mint (#64ffda)</option>
                            <option value="#ff6464">Coral (#ff6464)</option>
                            <option value="#64a0ff">Blue (#64a0ff)</option>
                            <option value="#9f64ff">Purple (#9f64ff)</option>
                            <option value="#ffffff">White (#ffffff)</option>
                            <option value="#0a0a0a">Black (#0a0a0a)</option>
                        </optgroup>
                    </select>
                </div>

                <button type="submit" class="submit-button">Modify Property</button>
            </form>
        </div>

        <div class="tool-card">
            <h2 class="tool-title">Database Cleanup</h2>
            <form id="cleanupForm">
                <div class="form-group">
                    <label class="form-label">Target User (leave empty for all users):</label>
                    <select name="target_user_id">
                        <option value="">All Users</option>
                        {% for user_item in all_users %}
                            <option value="{{ user_item.id }}">{{ user_item.username }}</option>
                        {% endfor %}
                    </select>
                </div>

                <button type="button" id="cleanupBadgesBtn" class="submit-button">Clean Duplicate Badges</button>
            </form>
            <div id="cleanupResult" class="mt-4" style="margin-top: 1rem; color: var(--accent-color);"></div>
        </div>
        
        <div class="tool-card">
            <h2 class="tool-title">Direct Badge Award</h2>
            <div class="form-group">
                <label class="form-label">Target User:</label>
                <select id="debug_user_id">
                    <option value="">Select a user...</option>
                    {% for user_item in all_users %}
                        <option value="{{ user_item.id }}">{{ user_item.username }}</option>
                    {% endfor %}
                </select>
            </div>
            
            <div class="form-group">
                <label class="form-label">Badge ID:</label>
                <input type="text" id="debug_badge_id" placeholder="Enter badge ID (e.g., first_trade)">
            </div>
            
            <button id="direct_award_button" class="submit-button">Directly Award Badge</button>
            <div id="award_result" class="mt-4" style="margin-top: 1rem; color: var(--accent-color);"></div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const cleanupBadgesBtn = document.getElementById('cleanupBadgesBtn');
        const cleanupResult = document.getElementById('cleanupResult');
        
        cleanupBadgesBtn.addEventListener('click', async function() {
            const targetUserId = document.querySelector('select[name="target_user_id"]').value;
            
            try {
                cleanupResult.textContent = "Cleaning up duplicate badges...";
                
                const response = await fetch('/cleanup/badges', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        user_id: targetUserId || null
                    })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    cleanupResult.textContent = `Success! ${data.message}`;
                    cleanupResult.style.color = '#00ff88';
                } else {
                    cleanupResult.textContent = `Error: ${data.error || 'Failed to clean up badges'}`;
                    cleanupResult.style.color = '#ff4466';
                }
            } catch (error) {
                cleanupResult.textContent = `Error: ${error.message}`;
                cleanupResult.style.color = '#ff4466';
            }
        });

        // Direct badge award functionality
        const directAwardButton = document.getElementById('direct_award_button');
        const awardResult = document.getElementById('award_result');
        
        if (directAwardButton) {
            directAwardButton.addEventListener('click', async function() {
                const userId = document.getElementById('debug_user_id').value;
                const badgeId = document.getElementById('debug_badge_id').value;
                
                if (!userId || !badgeId) {
                    awardResult.textContent = "Error: Please select a user and enter a badge ID";
                    awardResult.style.color = '#ff4466';
                    return;
                }
                
                awardResult.textContent = "Awarding badge...";
                
                try {
                    const response = await fetch('/debug/award_badge', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            user_id: userId,
                            badge_id: badgeId
                        })
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        awardResult.textContent = `Success! Badge '${badgeId}' awarded to user.`;
                        awardResult.style.color = '#00ff88';
                    } else {
                        awardResult.textContent = `Error: ${data.error || 'Failed to award badge'}`;
                        awardResult.style.color = '#ff4466';
                    }
                } catch (error) {
                    awardResult.textContent = `Error: ${error.message}`;
                    awardResult.style.color = '#ff4466';
                }
            });
        }
    });
</script>
{% endblock %}
